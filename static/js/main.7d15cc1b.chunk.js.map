{"version":3,"sources":["assets/images/logo.svg","assets/svg/table.svg","assets/svg/file.svg","assets/svg/undo.svg","assets/svg/redo.svg","assets/svg/folder.svg","assets/svg/save.svg","util/fileManager.js","actions.js","constants.js","components/menu/menu.js","components/newgame/newgame.js","components/modal/modal.js","components/newCard/newCard.js","util/api.js","components/editor/navbar/navbar.js","components/editor/pageNav/pageNav.js","components/editor/cardPile/cardPile.js","util/history.js","components/editor/editor.js","components/app/app.js","reducers.js","store.js","serviceWorker.js","index.js"],"names":["module","exports","decodeSaveData","saveData","JSON","parse","updateGrid","payload","type","initAlbum","updateAlbum","connect","props","history","dispatch","className","src","logo","alt","to","htmlFor","id","name","onChange","e","theFile","target","files","reader","FileReader","addEventListener","event","result","grid","album","pile","push","readAsText","href","title","state","useState","x","formX","setFormX","y","formY","setFormY","pages","formP","setFormP","onSubmit","i","page","j","bind","value","Modal","Fragment","children","open","setOpen","searchTerm","setSearchTerm","results","setResults","loading","setLoading","searchSuccess","setSearchSuccess","searchError","setSearchError","searchCards","preventDefault","fetch","then","response","json","data","Array","isArray","length","console","error","catch","addCardToPile","card","url","imgUrl","blob","Promise","resolve","reject","onloadend","onerror","readAsDataURL","imageData","img","searchResuts","map","index","key","onClick","disabled","historyPosition","historyLength","showNewCard","setShowNewCard","isThereHistory","viewHistory","useHistory","canUndo","canRedo","fileInputRef","createRef","window","confirm","table","current","click","folder","filename","pom","document","createElement","setAttribute","encodeURIComponent","createEvent","initEvent","dispatchEvent","saveToFile","stringify","save","file","log","undo","redo","ref","pageCount","pageElements","generatePagination","dragStartHandler","dragOverHandler","dragEndHandler","data-pile-id","onDragOver","onDrop","pileOutput","onDragStart","generatePile","newCopy","original","width","height","useParams","currentPage","parseInt","srcSwap","setSrcSwap","trgSwap","setTrgSwap","albumCoords","targetCard","albumId","dataset","pileId","split","useEffect","gridToGridSwap","gridToPileSwap","pileToGridSwap","newAlbum","cardA","cardB","resetDragTargets","newPile","splice","createGrid","selectedPage","cardNo","gridIndex","cardInner","data-album-id","handleCellClick","albumEditor","Number","isInteger","createAlbumEditor","isLoggedIn","from","exact","path","component","Menu","NewGame","Editor","initialState","rootReducer","oldHistory","newHistory","historicalAlbum","newPosition","action","slice","store","createStore","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d15cc1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d92a0af0.svg\";","module.exports = __webpack_public_path__ + \"static/media/table.67f40f2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/file.2f900671.svg\";","module.exports = __webpack_public_path__ + \"static/media/undo.99d9a08d.svg\";","module.exports = __webpack_public_path__ + \"static/media/redo.31578b8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/folder.a0d8a896.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.79ba08d9.svg\";","import aes from 'crypto-js/aes'\n\nexport function saveToFile(filename, data){\n  var pom = document.createElement('a')\n  pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(data))\n  pom.setAttribute('download', filename)\n\n  if (document.createEvent) {\n    var event = document.createEvent('MouseEvents')\n    event.initEvent('click', true, true)\n    pom.dispatchEvent(event)\n  }\n  else {\n    pom.click()\n  }\n}\n\nexport function encodeSaveData(saveData){\n  const dataString = JSON.stringify(saveData)\n  // return aes.encrypt(dataString, 'whatever lol')\n  return dataString\n}\n\nexport function decodeSaveData(saveData){\n  // const dataString = aes.decrypt(saveData, 'whatever lol')\n  return JSON.parse(saveData)\n}","import { ADD_CARD, UPDATE_GRID, INIT_ALBUM, UPDATE_ALBUM, GET_HISTORICAL_ALBUM, UNDO_HISTORY, REDO_HISTORY } from \"./constants\"\n\nexport function addCard(payload) {\n    return { type: ADD_CARD, payload }\n}\n\nexport function updateGrid(payload) {\n    return { type: UPDATE_GRID, payload }\n}\n\nexport function initAlbum(payload) {\n    return { type: INIT_ALBUM, payload }\n}\n\nexport function updateAlbum(payload) {\n    return { type: UPDATE_ALBUM, payload }\n}\n\nexport function getHistoricalAlbum(payload) {\n    return { type: GET_HISTORICAL_ALBUM, payload }\n}\n\nexport function undoHistory(payload) {\n    return { type: UNDO_HISTORY }\n}\n\nexport function redoHistory() {\n    return { type: REDO_HISTORY }\n}","export const ADD_CARD = \"ADD_CARD\"\n\nexport const UPDATE_GRID = \"UPDATE_GRID\"\n\nexport const INIT_ALBUM = 'INIT_ALBUM'\nexport const UPDATE_ALBUM = 'UPDATE_ALBUM'\nexport const GET_HISTORICAL_ALBUM = 'GET_HISTORICAL_ALBUM'\n\nexport const UNDO_HISTORY = 'UNDO_HISTORY'\nexport const REDO_HISTORY = 'REDO_HISTORY'\n\nexport const URL_SEARCH_CARDS = 'https://db.ygoprodeck.com/api/v7/cardinfo.php?fname='\nexport const URL_IMG_CDN_LARGE = 'https://storage.googleapis.com/ygoprodeck.com/pics/'\nexport const URL_IMG_CDN_SMALL = 'https://storage.googleapis.com/ygoprodeck.com/pics_small/'","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"\nimport logo from '../../assets/images/logo.svg'\nimport './menu.scss'\n\nimport { decodeSaveData } from '../../util/fileManager'\nimport { updateGrid, initAlbum } from '../../actions'\n\nconst Menu = props => {\n  const {history, dispatch} = props\n\n  const fileHandler = (e) => {\n    const theFile = e.target.files[0]\n    const reader = new FileReader()\n    reader.addEventListener('load', (event) => {\n      const saveData = decodeSaveData(event.target.result)\n      dispatch(updateGrid({\n        grid: saveData.grid\n      }))\n      dispatch(initAlbum({\n        album: saveData.album,\n        pile: saveData.pile\n      }))\n      history.push('/editor/1')\n    });\n    reader.readAsText(theFile)\n  }\n  \n  return (\n    <div className=\"Menu\">\n      <header className=\"Menu-header\">\n        <img src={logo} className=\"Menu-logo\" alt=\"logo\" />\n        <p>TCG Card Organizer</p>\n        <p><Link to=\"/new-game/\">New</Link></p>\n        <p><label htmlFor='load-file'>Load Saved File<input type=\"file\" id=\"load-file\" name=\"load-file\" onChange={fileHandler} /></label></p>\n        <div>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a></div>\n      </header>\n    </div>\n  )\n}\nexport default connect()(Menu)","import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport './newgame.scss';\nimport { updateGrid, initAlbum } from \"../../actions\";\n\nconst NewGame = props => {\n  const { grid, history, dispatch } = props\n\n  const [formX, setFormX] = useState(grid.x)\n  const [formY, setFormY] = useState(grid.y)\n  const [formP, setFormP] = useState(grid.pages)\n\n  const handleSubmit = e => {\n    dispatch(updateGrid({\n      grid:{\n        x: formX,\n        y: formY,\n        pages: formP\n      }\n    }));\n\n    // create a new empty album\n    let album = []\n    for (let i = 0; i < formP; i++){\n      let page = []\n      for (let j = 0; j < (formX * formY); j++){\n        page.push({})\n      }\n      album.push(page)\n    }\n    dispatch( initAlbum({ \n      album: album, \n      pile: []\n    }) )\n\n    history.push('/editor/1')\n  }\n\n  return (\n    <div className=\"newgame\">\n      <header className=\"newgame-header\">\n        <h2>Configure New Album</h2>\n        <p>These settings can be changed later</p>\n      </header>\n      \n      <main>\n        <form onSubmit={handleSubmit.bind(this)}>\n          <div className=\"form-control\">\n            <label htmlFor=\"grid_x\">Width: <input type=\"number\" name=\"grid_x\" value={formX} onChange={(e) => setFormX(e.target.value)} /></label>\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"grid_y\">Height: <input type=\"number\" name=\"grid_y\" value={formY} onChange={(e) => setFormY(e.target.value)} /></label>\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"grid_pages\">Pages: <input type=\"number\" name=\"grid_pages\" value={formP} onChange={(e) => setFormP(e.target.value)} /></label>\n          </div>\n          <div className=\"form-control\">\n            <button type=\"submit\">Create New Album</button>\n          </div>\n        </form>\n      </main>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return { \n    grid: state.grid\n  }\n}\nexport default connect(mapStateToProps)(NewGame)","import React from 'react'\nimport './modal.scss'\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      <div className=\"modal-screen\" />\n      <div className=\"modal-container\">\n        {props.children}\n      </div>\n    </React.Fragment>\n  )\n}\nexport default Modal","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\nimport './newCard.scss'\nimport Modal from '../modal/modal'\n\nimport {addCard} from '../../actions'\nimport {URL_SEARCH_CARDS, URL_IMG_CDN_SMALL, URL_IMG_CDN_LARGE} from '../../constants'\n\nimport {imageUrlToBase64} from '../../util/api'\n\nconst NewCard = props => {\n  const {open, setOpen, dispatch} = props\n  const [searchTerm, setSearchTerm] = useState('')\n  const [results, setResults] = useState([])\n\n  const [loading, setLoading] = useState(false)\n  const [searchSuccess, setSearchSuccess] = useState(false)\n  const [searchError, setSearchError] = useState(false)\n\n  const searchCards = (event) => {\n    event.preventDefault()\n    setLoading(true)\n    setSearchSuccess(false)\n    setSearchError(false)\n    setResults([])\n\n    const url = URL_SEARCH_CARDS + searchTerm\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        setLoading(false)\n        if (Array.isArray(data.data)){\n          setResults(data.data)\n          if (data.data.length){\n            setSearchSuccess(true)\n          }\n          else{\n            setSearchError(\"No results found :(\")\n          }\n        }\n        else{\n          setSearchError(\"Failure processing search results. Ask Moon to sort this mess out\")\n          console.error(\"ERROR\", data)\n        }\n      })\n      .catch(error => {\n        console.error(\"oh noes :(\", error)\n        setSearchError(\"Failure loading search results. Ask Moon to sort this mess out\")\n        setLoading(false)\n      })\n  }\n\n  const addCardToPile = (card) => {\n    let imgUrl = URL_IMG_CDN_LARGE + card.id + '.jpg'\n    imageUrlToBase64(imgUrl).then(imageData => {\n      dispatch(addCard({\n        name: card.name,\n        img: imageData\n      }))\n      setOpen(false)\n    })\n  }\n\n  const searchResuts = results.map((result, index) => {\n    // if (index < 10) return (\n    return (\n      <li key={result.id} onClick={() => addCardToPile(result)}>\n        <img src={`${URL_IMG_CDN_SMALL}${result.id}.jpg`} />\n      </li>\n    )\n  })\n\n  const renderLoading = () => loading ? <p>Loading...</p> : false\n  const renderSearchHeader = () => !loading && searchSuccess ? <h2>Search Results</h2> : false\n  const renderSearchMessage = () => !loading && searchError ? <p>{searchError}</p> : false\n\n  const render = () => (\n    <Modal>\n      <h2>Search for New Card</h2>\n      <form onSubmit={searchCards}>\n        <input id=\"cardSearch\" name=\"cardSearch\" type=\"text\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} />\n        <button type='submit' disabled={!searchTerm}>SEARCH</button>\n      </form>\n\n      {renderLoading()}\n      {renderSearchHeader()}\n      <ul id='card-search-results'>\n        {searchResuts}\n      </ul>\n      {renderSearchMessage()}\n    </Modal>\n  )\n\n  return  open ? render() : ''\n}\n\nexport default connect()(NewCard)","// imageUrlToBase64(myUrl).then(data => {do whatever})\nconst imageUrlToBase64 = url => fetch(url)\n  .then(response => response.blob())\n  .then(blob => new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onloadend = () => resolve(reader.result)\n    reader.onerror = reject\n    reader.readAsDataURL(blob)\n  }))\nexport {imageUrlToBase64}","import React, {useState, createRef} from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from \"react-router-dom\"\nimport './navbar.scss'\n\nimport table from '../../../assets/svg/table.svg'\nimport file from '../../../assets/svg/file.svg'\nimport undo from '../../../assets/svg/undo.svg'\nimport redo from '../../../assets/svg/redo.svg'\nimport folder from '../../../assets/svg/folder.svg'\nimport save from '../../../assets/svg/save.svg'\n\nimport NewCard from '../../newCard/newCard'\n\nimport {updateGrid, initAlbum, undoHistory, redoHistory} from '../../../actions'\nimport {encodeSaveData, decodeSaveData, saveToFile} from '../../../util/fileManager'\n\nconst Navbar = props => {\n  const { grid, album, pile, historyPosition, historyLength, dispatch } = props\n  const [showNewCard, setShowNewCard] = useState(false)\n  const isThereHistory = !!historyLength\n  const viewHistory = useHistory()\n\n  const canUndo = isThereHistory && historyPosition < (historyLength - 1)\n  const canRedo = historyPosition\n\n  const undoHandler = () => canUndo ? dispatch(undoHistory()) : console.log(\"NO UNDO FOR YOU\")\n  const redoHandler = () => canRedo ? dispatch(redoHistory()) : console.log(\"NO REDO FOR YOU\")\n\n  const saveHandler = () => {\n    const saveState = encodeSaveData({grid, album, pile})\n    saveToFile('savedalbum.json', saveState)\n  }\n\n  const newGameHandler = () => {\n    if (window.confirm(\"Warning: you will lose any unsaved changes.\")){\n      viewHistory.push('/new-game')\n    }\n  }\n\n  const fileInputRef = createRef()\n  const loadHandler = () => {\n    if (window.confirm(\"Warning: you will lose any unsaved changes.\")){\n      fileInputRef.current.click()\n    }\n  }\n\n  const fileHandler = e => {\n    const theFile = e.target.files[0]\n    const reader = new FileReader()\n    reader.addEventListener('load', (event) => {\n      const saveData = decodeSaveData(event.target.result)\n      dispatch(updateGrid({\n        grid: saveData.grid\n      }))\n      dispatch(initAlbum({\n        album: saveData.album,\n        pile: saveData.pile\n      }))\n    });\n    reader.readAsText(theFile)\n    viewHistory.push('/editor/1')\n  }\n\n  return (\n    <div className='editor-navbar'>\n      <NewCard open={showNewCard} setOpen={setShowNewCard} />\n      <ul>\n        <li onClick={newGameHandler}><img src={table} alt='New Album' /></li>\n        <li onClick={loadHandler}><img src={folder} alt='Open' /></li>\n        <li onClick={saveHandler}><img src={save} alt='Save' /></li>\n        <li className=\"divider\"></li>\n        <li onClick={() => setShowNewCard(!showNewCard)}><img src={file} alt='New Card' /></li>\n        <li onClick={undoHandler}><img src={undo} alt='Undo' /></li>\n        <li onClick={redoHandler}><img src={redo} alt='Redo' /></li>\n      </ul>\n      <input type=\"file\" id=\"load-file\" name=\"load-file\" ref={fileInputRef} onChange={fileHandler} />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return { \n      grid: state.grid,\n      album: state.album,\n      pile: state.pile,\n      historyPosition: state.historyPosition,\n      historyLength: state.history.length\n  }\n}\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from \"react-router-dom\";\n\nimport './pageNav.scss'\n\nconst PageNav = props => {\n  const { page, pageCount } = props\n\n  const generatePagination = () => {\n    if (!pageCount || pageCount <= 1)\n      return ''\n\n    let pageElements = []\n    for (let i = 1; i <= pageCount; i++){\n      pageElements.push(\n        <li key={`page-${i}`}>\n          <Link to={`/editor/${i}`}>{i}</Link>\n        </li>\n      )\n    }\n    pageElements.push(<li key='page-all'><Link to='/editor/all'>All</Link></li>)\n    return pageElements\n  }\n\n  return (\n    <ul id='editor-pagination'>\n      {generatePagination()}\n    </ul>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pageCount: state.grid.pages\n  }\n}\nexport default connect(mapStateToProps)(PageNav)","import React, {useState} from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport './cardPile.scss'\n\nconst CardPile = props => {\n  const { pageCount, pile, dragStartHandler, dragOverHandler, dragEndHandler } = props\n\n  const generatePile = () => {\n    let pileOutput = []\n    pile.map((card, index) => pileOutput.push(\n      <li key={`pile-${index}`} data-pile-id={index} onDragStart={dragStartHandler} onDragOver={dragOverHandler} onDrop={dragEndHandler}>\n        <img data-pile-id={index} src={card.img} alt={card.name} />\n      </li>\n    ))\n    return pileOutput\n  }\n\n  return (\n    <div className={`editor-pile ${pageCount ? 'above-pagination' : 'no-pagination'}`}>\n      <ul data-pile-id='0' onDragOver={dragOverHandler} onDrop={dragEndHandler}> \n        {generatePile()}\n      </ul>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return { \n      pageCount: state.grid.pages,\n      pile: state.pile\n  }\n}\nexport default connect(mapStateToProps)(CardPile)","export const newCopy = (original) => JSON.parse(JSON.stringify(original))","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport Navbar from './navbar/navbar'\nimport PageNav from './pageNav/pageNav'\nimport CardPile from './cardPile/cardPile'\n\nimport { updateAlbum } from \"../../actions\"\nimport { newCopy } from \"../../util/history\"\nimport './editor.scss'\n\nconst Editor = props => {\n    const { width, height, pageCount, album, pile, dispatch } = props\n    const { page } = useParams()\n    const currentPage = parseInt(page)\n\n    const [srcSwap, setSrcSwap] = useState(null)\n    const [trgSwap, setTrgSwap] = useState(null)\n\n    const dragStartHandler = e => {\n        const albumId = e.target.dataset.albumId\n        const pileId = e.target.dataset.pileId\n        let albumCoords, targetCard\n        if (albumId){\n            albumCoords = albumId.split('-')\n            targetCard = [parseInt(albumCoords[0]), parseInt(albumCoords[1])]\n            setSrcSwap(targetCard)\n        }\n        else if (pileId){\n            targetCard = parseInt(pileId)\n            setSrcSwap(targetCard)\n        }\n    }\n\n    const dragOverHandler = e => {\n        e.preventDefault()\n    }\n\n    const dragEndHandler = e => {\n        const albumId = e.target.dataset.albumId\n        const pileId = e.target.dataset.pileId\n        let albumCoords, targetCard\n        if (albumId){\n            albumCoords = albumId.split('-')\n            targetCard = [parseInt(albumCoords[0]), parseInt(albumCoords[1])]\n            setTrgSwap(targetCard)\n        }\n        else if (pileId){\n            targetCard = parseInt(pileId)\n            setTrgSwap(targetCard)\n        }\n    }\n\n    useEffect(() => {\n        if (srcSwap !== null && trgSwap !== null){\n            if (Array.isArray(srcSwap)){\n                if (trgSwap.length === 2){\n                    gridToGridSwap()\n                }\n                else{\n                    gridToPileSwap()\n                }\n            }\n            else if (!Array.isArray(srcSwap)){\n                if (trgSwap.length === 2){\n                    pileToGridSwap()\n                }\n            }\n        }\n    }, [trgSwap])\n\n    const gridToGridSwap = () => {\n        let newAlbum = newCopy(album)\n        const cardA = album[srcSwap[0]][srcSwap[1]] ? {...album[srcSwap[0]][srcSwap[1]]} : null\n        const cardB = album[trgSwap[0]][trgSwap[1]] ? {...album[trgSwap[0]][trgSwap[1]]} : null\n        newAlbum[trgSwap[0]][trgSwap[1]] = cardA\n        newAlbum[srcSwap[0]][srcSwap[1]] = cardB\n\n        dispatch( updateAlbum({ \n            album: newAlbum, \n            pile: pile\n        }) )\n        resetDragTargets()\n    }\n\n    const gridToPileSwap = () => {\n        let newAlbum = newCopy(album)\n        let newPile = newCopy(pile)\n        const cardA = {...album[srcSwap[0]][srcSwap[1]]}\n        newAlbum[srcSwap[0]][srcSwap[1]] = null\n        newPile.push(cardA)\n\n        dispatch( updateAlbum({ \n            album: newAlbum, \n            pile: newPile\n        }) )\n        resetDragTargets()\n    }\n\n    const pileToGridSwap = () => {\n        let newAlbum = newCopy(album)\n        let newPile = newCopy(pile)\n        const cardA = {...pile[srcSwap]}\n        const cardB = album[trgSwap[0]][trgSwap[1]] ? {...album[trgSwap[0]][trgSwap[1]]} : null\n        newAlbum[trgSwap[0]][trgSwap[1]] = cardA\n        newPile.splice(srcSwap, 1)\n        // Are we swapping cards, or inserting into an empty grid slot?\n        if (cardB !== null){\n            newPile.push(cardB)\n        }\n\n        dispatch( updateAlbum({ \n            album: newAlbum, \n            pile: newPile\n        }) )\n        resetDragTargets()\n    }\n\n    const resetDragTargets = () => {\n        setSrcSwap(null)\n        setTrgSwap(null)\n    }\n\n    const createAlbumEditor = () => {\n        let albumEditor = []\n\n        if (Number.isInteger(currentPage) && currentPage && currentPage <= pageCount){\n            let i = currentPage - 1\n            albumEditor.push(<h2 key={\"h2-\" + i}>{`Page ${(i + 1)}`}</h2>)\n            albumEditor.push(<div className=\"grid\" key={i}>{createGrid(i)}</div>)\n        }\n        else {\n            for (let i = 0; i < pageCount; i++) {\n                albumEditor.push(<h2 key={\"h2-\" + i}>{`Page ${(i + 1)}`}</h2>)\n                albumEditor.push(<div className=\"grid\" key={i}>{createGrid(i)}</div>)\n            }\n        }\n\n        return albumEditor\n    }\n\n    const createGrid = selectedPage => {\n        let grid = []\n\n        // Outer loop to create rows\n        for (let i = 0; i < height; i++) {\n          let children = []\n          //Inner loop to create columns\n          for (let j = 0; j < width; j++) {\n            let cardNo = ((selectedPage)* width * height) + ((i * width) + (j + 1))\n            let gridIndex = (i * width) + j\n\n            let cardInner = [`CARD ${cardNo}`]\n            if (album[selectedPage][gridIndex] && album[selectedPage][gridIndex].img) {\n                cardInner.push(<img data-album-id={`${selectedPage}-${gridIndex}`} key={\"img-\" + cardNo} className=\"cell-image\" src={album[selectedPage][gridIndex].img} alt={album[selectedPage][gridIndex].name} />)\n            }\n\n            children.push(<div data-album-id={`${selectedPage}-${gridIndex}`} onDragStart={dragStartHandler} onDragOver={dragOverHandler} onDrop={dragEndHandler} className=\"grid-cell\" key={selectedPage+\"-\"+i+\"-\"+j} onClick={handleCellClick.bind(cardNo)}>{cardInner}</div>)\n          }\n          //Create the row and add the columns\n          grid.push(<div className=\"grid-row\" key={selectedPage+\"-\"+i}>{children}</div>)\n        }\n        return grid\n    }\n\n    const handleCellClick = () => {\n    }\n\n    return (\n        <div className=\"Editor\">\n            <header className=\"editor-header\">\n                <Navbar />\n            </header>\n            <main>\n                {createAlbumEditor()}\n            </main>\n            <footer className=\"editor-footer\">\n                <CardPile\n                    dragStartHandler={dragStartHandler}\n                    dragOverHandler={dragOverHandler}\n                    dragEndHandler={dragEndHandler}\n                />\n                <PageNav page={currentPage} />\n            </footer>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return { \n        width: state.grid.x,\n        height: state.grid.y,\n        pageCount: state.grid.pages,\n        album: state.album,\n        pile: state.pile\n    }\n}\nexport default connect(mapStateToProps)(Editor)","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport Menu from '../menu/menu';\nimport NewGame from '../newgame/newgame';\nimport Editor from '../editor/editor';\n\nimport './app.scss';\n\nconst App = () => (\n  <Switch>\n    <Redirect from='/tgc-organizer' to='/' />\n    <Route exact path=\"/\" component={Menu} />\n    <Route path=\"/new-game\" component={NewGame} />\n    <Route path=\"/editor/:page\" component={Editor} />\n    <Route path=\"/editor\" component={Editor} />\n  </Switch>\n)\n\nconst mapStateToProps = (state) => {\n  return { \n      isLoggedIn: state.isLoggedIn\n  }\n}\nexport default connect(mapStateToProps)(App)","import { ADD_CARD, UPDATE_GRID, INIT_ALBUM, UPDATE_ALBUM, GET_HISTORICAL_ALBUM, UNDO_HISTORY, REDO_HISTORY } from \"./constants\"\n\nconst initialState = {\n    grid: {\n        x: 3,\n        y: 3,\n        pages: 2\n    },\n    album: [\n        [null, null, null, null, null, null, null, null, null],\n        [null, null, null, null, null, null, null, null, null]\n    ],\n    pile: [],\n    history: [{\n        album: [\n            [null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null]\n        ],\n        pile: []\n    }],\n    historyPosition: 0\n}\n\nfunction rootReducer(state = initialState, action) {\n    let oldHistory, newHistory, historicalAlbum, newPosition\n    switch(action.type){\n        case UPDATE_GRID:\n            return {\n                ...state,\n                grid: action.payload.grid\n            }\n        case INIT_ALBUM:\n            return {\n                ...state,\n                album: action.payload.album,\n                pile: action.payload.pile,\n                history: [{\n                    album: action.payload.album,\n                    pile: action.payload.pile\n                }],\n                historyPosition: 0\n            }\n        case UPDATE_ALBUM:\n            oldHistory = state.historyPosition ? state.history.slice(state.historyPosition) : state.history\n            newHistory = {album: action.payload.album, pile: action.payload.pile}\n            return {\n                ...state,\n                history: [newHistory, ...oldHistory],\n                historyPosition: 0,\n                album: action.payload.album,\n                pile: action.payload.pile\n            }\n        case GET_HISTORICAL_ALBUM:\n            historicalAlbum = state.history[action.payload.historyPosition]\n            return {\n                ...state,\n                historyPosition: action.payload.historyPosition,\n                album: historicalAlbum.album,\n                pile: historicalAlbum.pile\n            }\n        case ADD_CARD:\n            oldHistory = state.historyPosition ? state.history.slice(state.historyPosition) : state.history\n            newHistory = {album: state.album, pile: [...state.pile, action.payload]}\n            return {\n                ...state,\n                history: [newHistory, ...oldHistory],\n                historyPosition: 0,\n                pile: [...state.pile, action.payload]\n            }\n        case UNDO_HISTORY:\n            newPosition = state.historyPosition + 1\n            historicalAlbum = state.history[newPosition]\n            return {\n                ...state,\n                historyPosition: newPosition,\n                album: historicalAlbum.album,\n                pile: historicalAlbum.pile\n            }\n        case REDO_HISTORY:\n            newPosition = state.historyPosition - 1\n            historicalAlbum = state.history[newPosition]\n            return {\n                ...state,\n                historyPosition: newPosition,\n                album: historicalAlbum.album,\n                pile: historicalAlbum.pile\n            }\n        default:\n            return state\n    }\n}\n\nexport default rootReducer","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(rootReducer);\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n<Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter> \n</Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}